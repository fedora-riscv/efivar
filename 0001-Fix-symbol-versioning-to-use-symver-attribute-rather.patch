From 135bf8862204dbbdbd0b386f8077a0a7219c462a Mon Sep 17 00:00:00 2001
From: Jeff Law <law@redhat.com>
Date: Fri, 4 Sep 2020 10:15:44 -0600
Subject: [PATCH] Fix symbol versioning to use symver attribute rather than
 asms

---
 src/lib.c  | 6 +++---
 src/util.h | 2 +-
 2 files changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/lib.c b/src/lib.c
index 107e7ef..f48a16a 100644
--- a/src/lib.c
+++ b/src/lib.c
@@ -29,6 +29,7 @@ struct efi_var_operations default_ops = {
 struct efi_var_operations *ops = NULL;
 
 int NONNULL(2, 3) PUBLIC
+VERSION(_efi_set_variable, _efi_set_variable@libefivar.so.0)
 _efi_set_variable(efi_guid_t guid, const char *name, uint8_t *data,
 		  size_t data_size, uint32_t attributes)
 {
@@ -38,9 +39,9 @@ _efi_set_variable(efi_guid_t guid, const char *name, uint8_t *data,
 		efi_error("ops->set_variable() failed");
 	return rc;
 }
-VERSION(_efi_set_variable, _efi_set_variable@libefivar.so.0);
 
 int NONNULL(2, 3) PUBLIC
+VERSION(_efi_set_variable_variadic, efi_set_variable@libefivar.so.0)
 _efi_set_variable_variadic(efi_guid_t guid, const char *name, uint8_t *data,
 			   size_t data_size, uint32_t attributes, ...)
 {
@@ -50,9 +51,9 @@ _efi_set_variable_variadic(efi_guid_t guid, const char *name, uint8_t *data,
 		efi_error("ops->set_variable() failed");
 	return rc;
 }
-VERSION(_efi_set_variable_variadic, efi_set_variable@libefivar.so.0);
 
 int NONNULL(2, 3) PUBLIC
+VERSION(_efi_set_variable_mode,efi_set_variable@@LIBEFIVAR_0.24)
 _efi_set_variable_mode(efi_guid_t guid, const char *name, uint8_t *data,
 		       size_t data_size, uint32_t attributes, mode_t mode)
 {
@@ -64,7 +65,6 @@ _efi_set_variable_mode(efi_guid_t guid, const char *name, uint8_t *data,
 		efi_error_clear();
 	return rc;
 }
-VERSION(_efi_set_variable_mode,efi_set_variable@@LIBEFIVAR_0.24);
 
 int NONNULL(2, 3) PUBLIC
 efi_set_variable(efi_guid_t guid, const char *name, uint8_t *data,
diff --git a/src/util.h b/src/util.h
index f4c6c27..f009fd9 100644
--- a/src/util.h
+++ b/src/util.h
@@ -37,7 +37,7 @@
 #define PRINTF(...) __attribute__((__format__(printf, __VA_ARGS__)))
 #define FLATTEN __attribute__((__flatten__))
 #define PACKED __attribute__((__packed__))
-#define VERSION(sym, ver) __asm__(".symver " # sym "," # ver)
+#define VERSION(sym, ver) __attribute__ ((symver (# ver)))
 
 #define __branch_check__(x, expect, is_constant) \
 	__builtin_expect(!!(x), expect)
-- 
2.26.2

